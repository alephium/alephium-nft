// Who can change the metadata of this NFT? Maybe it should just be fixed
// when it is created, to reduce complexity
// Right now only 1 token is supported
TxContract NFT(
    mut owner: Address,
    name: ByteVec,
    description: ByteVec,
    uri: ByteVec,                 // name; description; image
    collectionAddress: Address    // The collection address, 0 when no collection
) {

    event NFTOwnerUpdated(
      previousOwner: Address,
      newOwner: Address
    )

    event NFTWithdrawn(
      owner: Address
    )

    event NFTDeposited(
      owner: Address
    )

    event NFTBurnt(
      owner: Address
    )

    pub fn getMetadata() -> (ByteVec, ByteVec, ByteVec, Address) {
        return name, description, uri, collectionAddress
    }

    pub fn getOwner() -> (Address) {
        return owner
    }

    @using(assetsInContract = true)
    pub fn updateOwner(newOwner: Address) -> () {
        assert!(callerAddress!() == owner)

        // Token needs to be owned by the contract when owner is changed
        assert!(tokenRemaining!(selfAddress!(), selfContractId!()) == 1)

        emit NFTOwnerUpdated(owner, newOwner)
        owner = newOwner
    }

    @using(preapprovedAssets=true, assetsInContract = true)
    pub fn deposit() -> () {
        assert!(callerAddress!() == owner)

        emit NFTDeposited(owner)

        transferTokenToSelf!(owner, selfContractId!(), 1)
    }

    @using(assetsInContract = true)
    pub fn withdraw() -> () {
        assert!(callerAddress!() == owner)

        emit NFTWithdrawn(owner)

        transferTokenFromSelf!(owner, selfContractId!(), 1)
    }

    @using(assetsInContract = true)
    pub fn burn() -> () {
        assert!(callerAddress!() == owner)

        emit NFTBurnt(owner)

        destroySelf!(owner)
    }
}
