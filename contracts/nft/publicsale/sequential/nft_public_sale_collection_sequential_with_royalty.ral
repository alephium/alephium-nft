// This is for the scenario where an artist or AI creates a set of arts
// in advance and sell to the public for minting, users can mint the arts
// in the collection sequentially by paying the mint price.
Contract NFTPublicSaleCollectionSequentialWithRoyalty(
    nftTemplateId: ByteVec,
    collectionUri: ByteVec,
    nftBaseUri: ByteVec,
    collectionOwner: Address,
    maxSupply: U256,
    mintPrice: U256,
    maxBatchMintSize: U256,
    royaltyRate: U256, // basis point. e.g. 2.5% == 250 basis point
    mut totalSupply: U256
) extends NFTPublicSaleCollectionSequentialBase(nftTemplateId, collectionUri, nftBaseUri, collectionOwner, maxSupply, mintPrice, maxBatchMintSize, totalSupply)
    implements INFTCollectionWithRoyalty {
    pub fn royaltyAmount(@unused tokenId: ByteVec, salePrice: U256) -> (U256) {
        return salePrice * royaltyRate / 10000
    }

    pub fn payRoyalty(amount: U256) -> () {
        transferTokenToSelf!(callerAddress!(), ALPH, amount)
    }
}